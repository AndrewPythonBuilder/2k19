import constants
from telegram import ReplyKeyboardMarkup
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import logging
import user_com
from datetime import time
import random
flag = False
time_you = False
money = False
money_1 = False
const = False
const_1 = False
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                     level=logging.INFO)
updater = Updater(token=constants.token)
dispatcher = updater.dispatcher
job_queue = updater.job_queue



def start (bot, update):
    if update.message.chat.id == constants.admin or update.message.chat.id == constants.admin2:
        bottons = [['–ó–∞–∫–∏–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏', '–ü—Ä–∏–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∏–≥—Ä–æ–∫—É']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id,
                     '–î–æ–±—Ä–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫, –∞–¥–º–∏–Ω', reply_markup=user_markup)
    else:
        global flag ,time_you, money, money_1
        link_name = str(update.message.text)[7:]
        hello = user_com.registration(update.message.chat.id, update.message.chat.first_name, str(update.message.chat.id),
                                      link_name)
        time_you = False
        flag = False
        money = False
        money_1 = False
        bottons = [['üí∞–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', 'ü§ù–ü–∞—Ä–∏'],
                   ['üí∏–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞', 'üíº–ú–æ–π –±–∞–ª–∞–Ω—Å'],
                   ['üî•–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(chat_id=update.message.chat_id, text=constants.hello_text, reply_markup=user_markup)

def answer_start(bot, update):
    global flag, time_you, money, money_1, const, const_1
    if update.message.text == 'üí∞–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å':
        bottons = [['Bitcoin- btc', 'Etherium - eth'],['Yandex Money'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.chat.id, ' –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è‚¨áÔ∏è')
        bot.send_message(update.message.chat.id, '–õ—é–±–æ–π –∏–∑ –º–µ—Ç–æ–¥–æ–≤ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ–∫—Å–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –≤ BTC.',
                         reply_markup=user_markup)
        bot.send_message(constants.admin,
                         str(update.message.chat.id) + ' —ç—Ç–æ id —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∂–∞–ª "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å"')
    elif update.message.text == 'üíº–ú–æ–π –±–∞–ª–∞–Ω—Å':
        id_ = update.message.chat.id
        s = str(user_com.info(id_)[2])
        bot.send_message(update.message.chat.id, '–í–∞—à –±–∞–ª–∞–Ω—Å ' + s + ' –í–¢–°')
    elif update.message.text == 'üî•–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ':
        bottons = [['–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å', '–†–µ—Ñ–µ—Ä–∞–ª—ã'], ['FAQ'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, 'üî•–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ', reply_markup=user_markup)
    elif update.message.text == 'ü§ù–ü–∞—Ä–∏':
        bottons = [['BTC/USD', 'ETH/USD'], ['XRP/USD', 'BCC/USD'], ['EOS/USD', 'LTC/USD'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –ø–∞—Ä—É:', reply_markup= user_markup)
    elif update.message.text == 'üí∏–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞':
        bottons = [['Bitc–æin- btc', '–ïtherium - eth'], ['Y–∞ndex Money'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞.', reply_markup=user_markup)
    elif update.message.text == 'Bitc–æin- btc' or update.message.text == '–ïtherium - eth' or update.message.text == 'Y–∞ndex Money':
        const = True
        bot.send_message(update.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–æ—à–µ–ª—å–∫–∞: ')
    elif const == True:
        bot.send_message(update.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤—ã–≤–µ—Å—Ç–∏. (–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ 0,002 btc –∏–ª–∏  0.05 eth)')
        const = False
        const_1 =True
    elif const_1 == True:
        const_1 = False
        try:
            float(update.message.text)
            bot.send_message(update.message.chat.id, '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥')
        except:
            bot.send_message(update.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑')
        update.message.text = '–ù–∞–∑–∞–¥'
        answer_start(bot, update)
    elif  update.message.text == 'BCC/USD':
        money = user_com.parse('BCC')
        constants.valume = 'BCC'
        bottons = [['–í–≤–µ—Ä—Öüìà', '–í–Ω–∏–∑üìâ'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ  –∫—É—Ä—Å –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏ –Ω–∏–∂–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å BCC: ' + str(
                                    money) + '$',  reply_markup=user_markup)
    elif  update.message.text == 'BTC/USD':
        money = user_com.parse('BTC')
        constants.valume = 'BTC'
        bottons = [['–í–≤–µ—Ä—Öüìà', '–í–Ω–∏–∑üìâ'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ  –∫—É—Ä—Å –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏ –Ω–∏–∂–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å BTC: ' + str(
                                    money) + '$',  reply_markup=user_markup)
    elif update.message.text == 'ETH/USD':
        money = user_com.parse('ETH')
        constants.valume = 'ETH'
        bottons = [['–í–≤–µ—Ä—Öüìà', '–í–Ω–∏–∑üìâ'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, ' –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ  –∫—É—Ä—Å –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏ –Ω–∏–∂–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å ETH: ' + str(
                                    money) + '$',  reply_markup=user_markup)
    elif update.message.text == 'XRP/USD':
        money = user_com.parse('XRP')
        constants.valume = 'XRP'
        bottons = [['–í–≤–µ—Ä—Öüìà', '–í–Ω–∏–∑üìâ'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ  –∫—É—Ä—Å –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏ –Ω–∏–∂–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å XRP: ' + str(
                                    money) + '$',  reply_markup=user_markup)
    elif update.message.text == 'EOS/USD':
        money = user_com.parse('EOS')
        constants.valume = 'EOS'
        bottons = [['–í–≤–µ—Ä—Öüìà', '–í–Ω–∏–∑üìâ'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ  –∫—É—Ä—Å –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏ –Ω–∏–∂–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å EOS: ' + str(
                                    money) + '$',  reply_markup=user_markup)
    elif update.message.text == 'LTC/USD':
        money = user_com.parse('LTC')
        constants.valume = 'LTC'
        bottons = [['–í–≤–µ—Ä—Öüìà', '–í–Ω–∏–∑üìâ'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Å—Ç–∞–≤–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ  –∫—É—Ä—Å –±—É–¥–µ—Ç –≤—ã—à–µ –∏–ª–∏ –Ω–∏–∂–µ. –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫—É—Ä—Å LTC: ' + str(
                                    money) + '$',  reply_markup=user_markup)
    elif update.message.text == 'Bitcoin- btc':
        bottons = [['–û–ø–ª–∞—Ç–∏–ª', '–û—Ç–º–µ–Ω–∞']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id,
                         constants.btc_text + '\n' + str(random.choice(constants.btc_list)), reply_markup=user_markup)
    elif update.message.text == 'Etherium - eth':
        bottons = [['–û–ø–ª–∞—Ç–∏–ª', '–û—Ç–º–µ–Ω–∞']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, constants.eth_text + '\n' + str(random.choice(constants.eth_list)), reply_markup= user_markup)
    elif update.message.text == '1 –ß–∞—Å':
        time_you = True
        user_com.set_alarm(1, update.message.from_user.id)
        bottons = [['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞–≤–∏—Ç–µ?', reply_markup=user_markup)
    elif update.message.text == '2 –ß–∞—Å–∞':
        time_you = True
        user_com.set_alarm(2, update.message.from_user.id)
        bottons = [['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞–≤–∏—Ç–µ?', reply_markup=user_markup)
    elif update.message.text == '4 –ß–∞—Å–∞':
        time_you = True
        user_com.set_alarm(4, update.message.from_user.id)
        bottons = [['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞–≤–∏—Ç–µ?', reply_markup=user_markup)
    elif update.message.text == '6 –ß–∞—Å–æ–≤':
        time_you = True
        user_com.set_alarm(6, update.message.from_user.id)
        bottons = [['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞–≤–∏—Ç–µ?', reply_markup=user_markup)
    elif update.message.text == '12 –ß–∞—Å–æ–≤':
        time_you = True
        user_com.set_alarm(12, update.message.from_user.id)
        bottons = [['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞–≤–∏—Ç–µ?', reply_markup=user_markup)
    elif update.message.text == '24 –ß–∞—Å–∞':
        time_you = True
        user_com.set_alarm(23, update.message.from_user.id)
        bottons = [['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–°–∫–æ–ª—å–∫–æ —Å—Ç–∞–≤–∏—Ç–µ?', reply_markup=user_markup)
    elif update.message.text == '–í–≤–µ—Ä—Öüìà':
        try:
            money = float(user_com.parse(constants.valume))
            user_com.more_less(update.message.from_user.id, 'more', money, constants.valume)
        except:
            pass
        bottons = [['1 –ß–∞—Å', '2 –ß–∞—Å–∞', '4 –ß–∞—Å–∞'], ['6 –ß–∞—Å–æ–≤', '12 –ß–∞—Å–æ–≤', '24 –ß–∞—Å–∞'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –≤–∞–º –≤—Ä–µ–º—è:', reply_markup=user_markup)
    elif update.message.text == '–í–Ω–∏–∑üìâ':
        try:
            money = float(user_com.parse(constants.valume))
            user_com.more_less(update.message.from_user.id, 'less', money, constants.valume)
        except:
            pass
        bottons = [['1 –ß–∞—Å', '2 –ß–∞—Å–∞', '4 –ß–∞—Å–∞'], ['6 –ß–∞—Å–æ–≤', '12 –ß–∞—Å–æ–≤', '24 –ß–∞—Å–∞'], ['–ù–∞–∑–∞–¥']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(update.message.from_user.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –≤–∞–º –≤—Ä–µ–º—è:', reply_markup=user_markup)
    elif update.message.text == '–ù–∞–∑–∞–¥': #–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        flag = False
        time_you = False
        money = False
        money_1 = False
        bottons = [['üí∞–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', 'ü§ù–ü–∞—Ä–∏'],
                   ['üí∏–í—ã–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞', 'üíº–ú–æ–π –±–∞–ª–∞–Ω—Å'],
                   ['üî•–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ']]
        user_markup = ReplyKeyboardMarkup(bottons)
        bot.send_message(chat_id=update.message.chat_id, text = random.choice(constants.hey_text), reply_markup=user_markup)
    elif update.message.text == '–†–µ—Ñ–µ—Ä–∞–ª—ã':
        info = user_com.info(update.message.chat.id)
        bot.send_message(update.message.chat.id, '–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ø–æ–ª–Ω–∏—Ç –±–∞–ª–∞–Ω—Å, –≤–∞–º –Ω–∞—á–∏—Å–ª–∏—Ç—Å—è 0,0005 BTC \n –≠—Ç–æ –≤–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: http://t.me/Btc_winbot?start=' + str(info[3]) + ' . \n –í–∞—à–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã: ' + str(info[5]))
    elif update.message.text== '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å':

        flag = True
        bot.send_message(update.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞—à –º–æ–¥–µ—Ä–∞—Ç–æ—Ä!')
    elif flag == True:
        bot.send_message(constants.admin, '–í–æ–ø—Ä–æ—Å: ' + update.message.text)
        bot.send_message(constants.admin, '–í–æ–ø—Ä–æ—Å: ' + update.message.text)
        flag = False
        bot.send_message(update.message.chat.id, '–°–ø–∞—Å–∏–±–æ')
        update.message.text = '–ù–∞–∑–∞–¥'
        answer_start(bot, update)
    elif time_you == True:
        try:
            q = float(update.message.text)
            if  q <= user_com.info(update.message.chat.id)[2]:
                user_com.add_plus(update.message.chat.id, -q)
                user_com.pay(update.message.chat.id, q)
                bot.send_message(update.message.chat.id, '–°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞')
                bot.send_message(constants.admin, str(q)+ ' '+ str(update.message.chat.id) )

            else:
                bot.send_message(update.message.chat.id, '–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥')
            time_you = False
            update.message.text = '–ù–∞–∑–∞–¥'
            answer_start(bot, update)

        except:
            time_you = False
            bot.send_message(update.message.chat.id, '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫')
            update.message.text = '–ù–∞–∑–∞–¥'
            answer_start(bot, update)
    elif update.message.text == '–ó–∞–∫–∏–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏' and (update.message.chat.id == constants.admin or update.message.chat.id == constants.admin2 ):
        bot.send_message(update.message.chat.id, '–ö–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∏–Ω—É—Ç—å? –∏ –∫–∞–∫–æ–π id —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')
        bot.send_message(update.message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –≤—ã –ø–∏—à–∏—Ç–µ id —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∏–Ω—É—Ç—å –¥–µ–Ω–µ–≥, –ø–æ—Ç–æ–º, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥.')
        bot.send_message(update.message.chat.id, '–ù–∞–ø—Ä–∏–º–µ—Ä')
        bot.send_message(update.message.chat.id, '286077227 123')
        bot.send_message(update.message.chat.id, '–¢–µ–ø–µ—Ä—å —É —á–µ–ª–æ–≤–µ–∫–∞ id  –∫–æ—Ç–æ—Ä–æ–≥–æ 286077227  –Ω–∞ —Å—á–µ—Ç–µ 123 BTC')
        bot.send_message(update.message.chat.id, '!!! –ì–ª–∞–≤–Ω–æ–µ. –≠—Ç–∞ –ö–Ω–æ–ø–∫–∞ –Ω–µ –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç –¥–µ–Ω–µ–≥, –∞ –∏–∑–º–µ–Ω—è–µ—Ç –∫–æ–ª-–≤–æ! –¢–æ –µ—Å—Ç—å —É —á–µ–ª–æ–≤–µ–∫–∞ –±—ã–ª–æ 12 BTC,  –∞ –ø–æ—Å–ª–µ —ç—Ç–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞–Ω–µ—Ç 123. –ù–∞–ø—Ä–∏–º–µ—Ä !!!')
        bot.send_message(update.message.chat.id, '–ò—Ç–∞–∫. –ö–∞–∫—É—é —Å—É–º–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∏–Ω—É—Ç—å? –∏ –∫–∞–∫–æ–π id —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')
        money = True
    elif money == True:
        try:
            text = update.message.text.split()
            user_com.add(text[1], text[0])
            bot.send_message(update.message.chat.id, '–°–ø–∞—Å–∏–±–æ, –¥–µ–Ω—å–≥–∏ –≤ –∏–≥—Ä–µ')
            money = False
        except:
            bot.send_message(update.message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç')
            money = False
        update.message.text = '–ù–∞–∑–∞–¥'
        answer_start(bot, update)
    elif update.message.text == '–ü—Ä–∏–±–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∏–≥—Ä–æ–∫—É':
        bot.send_message(update.message.chat.id, '–ù–∞ —Å–∫–æ–ª—å–∫–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–≤–µ–ª–∏—á–∏—Ç—å —Å—á–µ—Ç –∏–≥—Ä–æ–∫–∞? –∏ –∫–∞–∫–æ–π id —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')
        bot.send_message(update.message.chat.id,
                         '–°–Ω–∞—á–∞–ª–∞ –≤—ã –ø–∏—à–∏—Ç–µ id —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä–æ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∏–Ω—É—Ç—å –¥–µ–Ω–µ–≥, –ø–æ—Ç–æ–º, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª —Å–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥.')
        bot.send_message(update.message.chat.id, '–¢—É—Ç –í—ã –ø—Ä–∏–±–∞–≤–ª—è–µ—Ç–µ –Ω–µ–∫—É—é —Å—É–º–º—É –Ω–∞ —á–µ–π-—Ç–æ id')
        money_1 = True
    elif money_1 == True:
        try:
            text = update.message.text.split()
            user_com.add_plus(int(text[1]), int(text[0]))
            bot.send_message(update.message.chat.id, '–°–ø–∞—Å–∏–±–æ, –¥–µ–Ω—å–≥–∏ –≤ –∏–≥—Ä–µ')


        except:
            bot.send_message(update.message.chat.id, '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç')
        update.message.text = '–ù–∞–∑–∞–¥'
        answer_start(bot, update)
        money_1 = False
    elif update.message.text == 'FAQ':
        bot.send_message(update.message.chat.id, constants.FAQ)
    elif update.message.text == '–û–ø–ª–∞—Ç–∏–ª':
        bot.send_message(update.message.chat.id, '–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞, –≤–∞—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ, —Å—Ä–µ–¥—Å—Ç–≤–∞ –ø–æ—Å—Ç—É–ø—è—Ç –∫ –≤–∞–º –Ω–∞ —Å—á—ë—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ 1-–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–µ—Ç–∏.')
        update.message.text = '–ù–∞–∑–∞–¥'
        answer_start(bot, update)
    elif update.message.text == '–û—Ç–º–µ–Ω–∞':
        update.message.text = '–ù–∞–∑–∞–¥'
        answer_start(bot, update)
    s = user_com.o_clock()
    if s != []:
        for i in s:
            info = user_com.info(i)
            try:
                money_l = user_com.parse(i)
            except:
                break
            if info[8] == 'less':
                if float(str(money_l)) < float(info[7]):
                    user_com.add_plus(info[0], info[6] * 1.8)
                    bot.send_message(info[0], '–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞')
                else:
                    bot.send_message(info[0], '–°—Ç–∞–≤–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞')
            else:
                if float(str(money_l)) > float(info[7]):
                    user_com.add_plus(info[0], info[6] * 1.8)
                    bot.send_message(info[0], '–°—Ç–∞–≤–∫–∞ –ø—Ä–æ—à–ª–∞')
                else:
                    bot.send_message(info[0], '–°—Ç–∞–≤–∫–∞ –Ω–µ –ø—Ä–æ—à–ª–∞')
            user_com.null(info[0])




def question(bot,update):
    print(update.message.text)


def time_now(bot, arg):
    global flag, time_you, money, money_1,const, const_1
    time_you = flag =  money_1 =  money = const = const_1 = False
    id_ = user_com.all_id()
    write = user_com.parse('All')
    for j in id_:
        try:
            bot.send_message(j[0], constants.kurs % (write[0], write[1], write[2], write[3], write[4], write[6]))
            bottons = [['BTC/USD', 'ETH/USD'], ['XRP/USD', 'BCC/USD'], ['EOS/USD', 'LTC/USD'], ['–ù–∞–∑–∞–¥']]
            user_markup = ReplyKeyboardMarkup(bottons)
            bot.send_message(j[0], '–í—ã–±–µ—Ä–µ—Ç–µ –Ω—É–∂–Ω—É—é –≤–∞–º –ø–∞—Ä—É:', reply_markup=user_markup)
        except:
            pass




question_handler = CommandHandler('question', question)
start_handler = CommandHandler('start', start)
answer_handler = MessageHandler(Filters.text, answer_start)
dispatcher.add_handler(start_handler)
dispatcher.add_handler(question_handler)
job_queue.run_daily(time_now, time(22,00))
job_queue.run_daily(time_now, time(18,00))
job_queue.run_daily(time_now, time(21,00))
job_queue.run_daily(time_now, time(20,00))
job_queue.run_daily(time_now, time(16,00))
job_queue.run_daily(time_now, time(14,00))
job_queue.run_daily(time_now, time(12,00))
job_queue.run_daily(time_now, time(10,00))
job_queue.run_daily(time_now, time(8,00))
job_queue.run_daily(time_now, time(6,00))
job_queue.run_daily(time_now, time(4,00))
job_queue.run_daily(time_now, time(2,00))
job_queue.run_daily(time_now, time(0,00))
dispatcher.add_handler(answer_handler)
updater.start_polling(timeout=5, clean=True )
